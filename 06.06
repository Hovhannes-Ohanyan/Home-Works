def pow(base, exp):
    res = 1
    count = 0

    while count < abs(exp):

        if (exp > 0):

            res = res * base

        elif (base != 0 and exp < 0):

            res = (1 / base ** (-exp))

        else:

            res = "no"

        count += 1

    return res


base = 0
exp = -2


# print(pow(base,exp))

def sum(a, b):
    sum = 0

    if (a < b):
        while (a <= b):
            sum += a
            a += 1

    elif (a >= b):
        while (b <= a):
            sum += b
            b += 1
    return sum


# print("Sum of numbers: ", sum(8, 10))

def guess_enough(value, target):
    if abs(value ** 3 - target) < 0.0001:

        return True

    else:

        return False


# print(guess_enough())

def abs(n):
    if n > 0:

        return n

    else:

        return -n


# print(abs())

def improve(root, target):
    return ((target / (root ** 2)) + (2 * root)) / 3


# print(improve())

def cube(n):
    root = 1

    while not guess_enough(root, n):
        root = improve(root, n)

    return root


number = 8

# print("Cube root of", number, ":", cube(number))
